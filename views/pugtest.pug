//-extends layout

//-block content

doctype html
html(lang='en')
  head
    title= title
    meta(charset='utf-8')
  body
    h1=title
    //- directly use input data property:
    //-p.form-control(id='statinf')!= status
    //- or use thru pug variabe:
    - var stat = status
    //-<p class="form-control" id="statinf" hidden="">Undefinded</p>
    //-p.form-control(id='statinf' hidden)!= stat
    //- or
    p#statinf.form-control(hidden)!= stat
    //-<p class="form-control" id="statinf" hidden="">Undefinded</p>

    form(method='POST' action='')
      div.form-group
        label(for='status') Status:
        //-select#status.form-control(type='select' placeholder='Select status' name='status' required='true')
        select#status.form-control(type='select' placeholder='Select status' name='status')
          option(value='Maintenance') Maintenance
          //-option(value='Available' selected) Available
          option(value='Available') Available
          option(value='Loaned') Loaned
          option(value='Reserved') Reserved
          option(value='Undefinded') Undefinded
          //-p!= status

      button.btn.btn-primary(type='submit') Submit

    script.
      function setSelect(elemId) {
        let statInfo = document.getElementById(elemId);
        let status = statInfo.innerText;
        console.log('status to set ' + status);
        let select = document.getElementById('status');
        // return the index of the initially selected option
        //console.log(select.selectedIndex);
        // return the value of the initially selected option
        //console.log(select.options[select.selectedIndex].value);
        console.log(`Initially ` + select.selectedIndex + ': ' + select.options[select.selectedIndex].value);
        /*
        for (let opt in select) {
          if (status === 'Maintenance') {
            opt.value = 'Maintenance'; select.selectedIndex = 0;
          }
          else if (status === 'Available') {
            opt.value = 'Available'; select.selectedIndex = 1;
          }
          else if (status === 'Loaned') {
            opt.value = 'Loaned'; select.selectedIndex = 2;
          }
          else if (status === 'Reserved') {
            opt.value = 'Reserved'; select.selectedIndex = 3;
          }
          else if (status === 'Undefinded') {
            opt.value = 'Undefinded'; select.selectedIndex = 4;
          }
        */
        let statArr = ['Maintenance', 'Available', 'Loaned', 'Reserved', 'Undefinded'];
        for (let i = 0; i < statArr.length; i++) {
          if (statArr[i] == status) {
            select.selectedIndex = i; select.options[select.selectedIndex].value = status;
          }
        }
        // return the index of the selected option
        //console.log(select.selectedIndex);
        // return the value of the selected option
        //console.log(select.options[select.selectedIndex].value);
        console.log(`Set ` + select.selectedIndex + ': ' + select.options[select.selectedIndex].value);
      }
      setSelect('statinf');

    if errors 
      ul
        for error in errors
          li!= error.msg